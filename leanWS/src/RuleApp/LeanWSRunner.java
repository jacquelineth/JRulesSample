//      -----------------------------------------------------------------------
//      Licensed Materials - Property of IBM
//      IBM WebSphere ILOG JRules
//      (c) Copyright IBM Corporation 1987, 2010. All Rights Reserved.
//      RuleApp: RuleApp
//      Date: Fri, 17 Jan 2014 11:47:44 CET
//      Generated by: ILOG JRules 7.1.1.5
//
//      N O T I C E
//
//      Changes to this file will be lost if the code is regenerated.
//      Note to U.S. Government Users Restricted Rights: 
//      Use, duplication or disclosure restricted by GSA ADP Schedule 
//      Contract with IBM Corp.
//     -----------------------------------------------------------------------

package RuleApp;

import java.io.Serializable;

import javax.jws.*;
import javax.jws.soap.SOAPBinding;

/**
 * This interface contains one method for each ruleset of the RuleApp to run.
 */
@WebService(targetNamespace = "http://RuleApp")
@SOAPBinding(style = SOAPBinding.Style.DOCUMENT, use = SOAPBinding.Use.LITERAL, parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface LeanWSRunner extends Serializable {

	/**
	 * This method executes a ruleset archive from a RuleApp archive. The
	 * RuleApp archive is saved at the root of the project and is called:
	 * RuleApp.jar. The executed ruleset archive in this method is Rules
	 * (version 1.0). The in or inout ruleset parameters are stored in the
	 * RulesRequest class. The in or inout ruleset parameters are:
	 * <ul>
	 * <li>counter ( short )</li>
	 * <li>myMainportfolio ( com.ibm.support.PMR.Portfolio )</li>
	 * <li>mySecondaryportfolio ( com.ibm.support.PMR.Portfolio )</li>
	 * </ul>
	 * The inout or out ruleset parameters are stored in the RulesResult class.
	 * The out ruleset parameters are:
	 * <ul>
	 * <li>Exectime ( long )</li>
	 * <li>Store ( com.ibm.support.PMR.Store )</li>
	 * <li>myMainportfolio ( com.ibm.support.PMR.Portfolio )</li>
	 * <li>mySecondaryportfolio ( com.ibm.support.PMR.Portfolio )</li>
	 * </ul>
	 * 
	 * @param rulesetrequest
	 *            The ruleset parameters to set.
	 * @return A result class that stores the execution output, the user data
	 *         and the out ruleset parameters.
	 */
	@WebMethod(operationName = "Rules", action = "urn:executeRules")
	@WebResult(targetNamespace = "http://RuleApp/")
	RulesResult executeRules(RulesRequest rulesetrequest)
			throws RulesetExecutionException;
}
