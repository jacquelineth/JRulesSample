
property loadGetterSetterAsProperties "true"
property origin "xom:/BOM//ClassicXOM"
property uuid "25d5135d-d140-44fd-88e1-77d713237b85"
package com.ibm.support.PMR;


public final class Category
        extends java.lang.Enum
{
    domain {static Centurion, static Platinum, static Gold, static Silver, static Exclusive, static Business, static Express, static Distinguished}
    public static final readonly com.ibm.support.PMR.Category Business
                property categories "MiddeClass,Rich";
    public static final readonly com.ibm.support.PMR.Category Centurion;
    public static final readonly com.ibm.support.PMR.Category Distinguished;
    public static final readonly com.ibm.support.PMR.Category Exclusive;
    public static final readonly com.ibm.support.PMR.Category Express;
    public static final readonly com.ibm.support.PMR.Category Gold;
    public static final readonly com.ibm.support.PMR.Category Platinum;
    public static final readonly com.ibm.support.PMR.Category Silver;
    public string toString();
    public static com.ibm.support.PMR.Category valueOf(string arg);
    public static com.ibm.support.PMR.Category[] values();
}

public class Customer
{
    public int CumulatedPurchase
                property update "true";
    public com.ibm.support.PMR.Category category;
    public string name;
    public Customer();
}

public class Portfolio
{
    public java.util.EnumSet categories domain 0,* class com.ibm.support.PMR.Category;
    public java.util.Vector customersList domain 0,* class com.ibm.support.PMR.Customer;
    public Portfolio();
    public void addSingleCustomer(com.ibm.support.PMR.Customer c);
    public boolean checkListed(com.ibm.support.PMR.Customer customer);
    public boolean containsCategory(com.ibm.support.PMR.Category arg);
    public void removeSingleCustomer(com.ibm.support.PMR.Customer c);
    public void reverseCategory();
}

public final class Product
        extends java.lang.Enum
{
    domain {static Cola, static Bread, static Burger, static CD, static DVD, static USBkey, static Mouse, static Game, static LavaLamp, static Laptop, static Monitor, static Phone}
    public static final readonly com.ibm.support.PMR.Product Bread;
    public static final readonly com.ibm.support.PMR.Product Burger;
    public static final readonly com.ibm.support.PMR.Product CD;
    public static final readonly com.ibm.support.PMR.Product Cola;
    public static final readonly com.ibm.support.PMR.Product DVD;
    public static final readonly com.ibm.support.PMR.Product Game;
    public static final readonly com.ibm.support.PMR.Product Laptop;
    public static final readonly com.ibm.support.PMR.Product LavaLamp;
    public static final readonly com.ibm.support.PMR.Product Monitor;
    public static final readonly com.ibm.support.PMR.Product Mouse;
    public static final readonly com.ibm.support.PMR.Product Phone;
    public static final readonly com.ibm.support.PMR.Product USBkey;
    public readonly int price;
    public static com.ibm.support.PMR.Product cheapestProduct();
    public static com.ibm.support.PMR.Product getAffordableProduct(int argument);
    public string toString();
    public static com.ibm.support.PMR.Product valueOf(string arg);
    public static com.ibm.support.PMR.Product[] values();
}

public class Store
{
    public readonly java.lang.Integer computedInteger;
    public int computedValue;
    public java.lang.Integer legalStockValue;
    public Store();
    public void addSale(com.ibm.support.PMR.Product arg);
    public string toString();
}

public class Tax
        property automaticVariable "true"
{
    public static final java.lang.Double computeEuroVAT(java.lang.Double Value);
    public static final java.lang.Double computeLocalTAX(double paid);
}

